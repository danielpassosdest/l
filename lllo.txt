vendas = [
    ["6", "lapis de cor", "02", "36", "16.84"],
    ["13", "caderno", "13", "26", "6.58"],
    ["3", "compasso", "09", "32", "6.49"],
    ["7", "giz de cera", "17", "39", "4.25"],
    ["13", "caderno", "13", "56", "6.58"],
    ["6", "lapis de cor", "05", "17", "16.84"],
    ["4", "esquadro", "05", "57", "1.52"],
    ["7", "giz de cera", "23", "13", "4.25"],
    ["4", "esquadro", "25", "30", "1.52"],
    ["3", "compasso", "14", "12", "6.49"]
]






def highest_revenue(vendas):
    max_revenue = 0
    best_item = None
    for row in vendas:
        revenue = int(row[3]) * float(row[4])
        if revenue > max_revenue:
            max_revenue = revenue
            best_item = row[1]
    print("Item with highest revenue:", best_item)

highest_revenue(vendas)




def total_quantity(vendas, product_name):
    total = 0
    for row in vendas:
        if row[1] == product_name:
            total += int(row[3])
    return total

print(total_quantity(vendas, "compasso"))  # Should print 44


Exercício 4: Descreva a ideia principal por trás de cada algoritmo de ordenação

Aqui estão as descrições:

Selection Sort
A ideia principal por trás do selection sort é repetidamente selecionar o menor (ou maior) elemento da porção não ordenada da lista e trocá-lo com o primeiro elemento da porção não ordenada. Este processo é repetido até que toda a lista esteja ordenada.

Insertion Sort
A ideia principal por trás do insertion sort é iterar sobre a lista um elemento de cada vez, inserindo cada elemento em sua posição adequada na porção ordenada da lista. Isso é feito comparando cada elemento com os elementos na porção ordenada e shiftando-os como necessário para fazer espaço para o novo elemento.

Bubble Sort
A ideia principal por trás do bubble sort é repetidamente iterar sobre a lista, comparando elementos adjacentes e trocando-os se estiverem na ordem errada. Este processo é repetido até que não haja mais trocas necessárias, indicando que a lista está ordenada.

Gostaria de saber se você gostaria que eu elaborasse sobre algum desses exercícios!
